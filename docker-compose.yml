

services:
  app:
    build: .
    command: sh -c "python3 manage.py makemigrations accounts interactions podcasts && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - app:/app
    networks:
      - main
    ports:
      - 8000:8000
    depends_on:
      - db
    
    
  hotreload:
    build: .
    command: sh -c "watchmedo auto-restart --directory=/app --pattern=*.py --recursive python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app  
    networks:
      - main
    depends_on:
      - app


  db:
    image: postgres:14
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - main
    restart: always
    env_file:
      - .env


  redis:
    image: redis:7
    networks:
      - main
    volumes:
      - redis:/redis
    

  rabbitmq:
    image: "rabbitmq:3-management"
    networks:
      - main
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit:/rabbitmq


  celery:
    restart: always
    build: .
    command: celery -A config worker -l info
    networks:
      - main
    volumes:
      - celery:/celery
    depends_on:
      - rabbitmq
      - redis
      - app


  celery-beat:
    build: .
    command: celery -A config beat -l info
    networks:
      - main
    volumes:
      - celery-beat:/celery-beat
    depends_on:
      - rabbitmq
      - redis
      - app


networks:
  main:

volumes:
  app:
  postgres-data:
  redis:
  rabbit:
  celery:
  celery-beat: